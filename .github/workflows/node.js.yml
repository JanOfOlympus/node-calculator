name: Node.js CI

on:
  workflow_dispatch:
  pull_request:

env:
  NODE_VERSION: 18.x

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Install dependencies
        run: npm install

  test-challenge:
    name: Test Challenge
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Install dependencies
        run: npm install
      - name: Run Challenge Test
        run: npm run test-challenge
      - name: Archive test results to GitHub Packages
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.run_id }}-${{ env.NODE_VERSION }}-test-results
          path: ./out/test-results.xml

  # test-all:
  #   name: Test All
  #   needs: install-dependencies
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup Node.js ${{ env.NODE_VERSION }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #     - name: Cache node modules
  #       id: cache-npm
  #       uses: actions/cache@v3
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         # npm cache files are stored in `~/.npm` on Linux/macOS
  #         path: ~/.npm
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ env.cache-name }}-
  #           ${{ runner.os }}-build-
  #           ${{ runner.os }}-
  #     - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
  #       name: List the state of node modules
  #       continue-on-error: true
  #       run: npm list
  #     - name: Install dependencies
  #       run: npm install
  #     - name: Run Full Test Suite
  #       run: npm run test
  #     - name: Archive test results to GitHub Packages
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ github.run_id }}-${{ env.NODE_VERSION }}-test-results
  #         path: ./out/test-results.xml